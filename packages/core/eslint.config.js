import antfu from '@antfu/eslint-config'

export default antfu({
  typescript: true,
  ignores: [
    'dist',
    'node_modules',
    '*.min.js',
    '**/*.d.ts',
  ],
  rules: {
    // Customize rules as needed
    'no-console': 'off',
    'no-alert': 'off',
    'no-confirm': 'off',
    'no-prompt': 'off',
    'no-unused-vars': 'off',
    'unused-imports/no-unused-vars': 'warn',
    'unused-imports/no-unused-imports': 'warn',
    '@typescript-eslint/no-unused-vars': 'warn',
    '@typescript-eslint/no-explicit-any': 'off',
    'ts/no-explicit-any': 'off',
    'ts/no-require-imports': 'off',
    'ts/no-use-before-define': 'off',
    'ts/no-dupe-class-members': 'warn',
    'style/semi': ['error', 'never'],
    'style/quotes': ['error', 'single'],
    'style/indent': 'off',
    'style/indent-binary-ops': 'off',
    'style/no-trailing-spaces': 'off',
    'style/no-multiple-empty-lines': 'off',
    'style/comma-dangle': 'off',
    'style/brace-style': 'off',
    'style/arrow-parens': 'off',
    'style/operator-linebreak': 'off',
    'style/multiline-ternary': 'off',
    'style/padded-blocks': 'off',
    'style/quote-props': 'off',
    'style/member-delimiter-style': 'off',
    'style/max-statements-per-line': 'off',
    'style/eol-last': 'off',
    'curly': 'off',
    'antfu/curly': 'off',
    'antfu/if-newline': 'off',
    'antfu/consistent-list-newline': 'off',
    'unicorn/error-message': 'off',
    'unicorn/prefer-node-protocol': 'off',
    'unicorn/prefer-number-properties': 'off',
    'unicorn/no-new-array': 'off',
    'node/prefer-global/process': 'off',
    'node/prefer-global/buffer': 'off',
    'perfectionist/sort-imports': 'off',
    'perfectionist/sort-named-imports': 'off',
    'perfectionist/sort-named-exports': 'off',
    'import/consistent-type-specifier-style': 'off',
    'prefer-template': 'off',
    'prefer-exponentiation-operator': 'off',
    'object-shorthand': 'off',
    'dot-notation': 'off',
    'no-case-declarations': 'off',
    'regexp/no-super-linear-backtracking': 'warn',
    'regexp/no-empty-lookarounds-assertion': 'warn',
    'regexp/use-ignore-case': 'warn',
    'regexp/no-dupe-disjunctions': 'warn',
    'regexp/no-useless-escape': 'warn',
    'regexp/no-unused-capturing-group': 'warn',
    'ts/prefer-as-const': 'warn',
    'no-new': 'off',
    'no-mixed-operators': 'off',
    'no-throw-literal': 'off',
    'no-cond-assign': 'off',
    'unicorn/prefer-text-content': 'off',
    'unicorn/prefer-dom-node-text-content': 'off',
    'func-call-spacing': 'off',
    'ts/ban-types': 'off',
    'no-this-alias': 'off',
    'ts/no-this-alias': 'off',
    'no-mixed-operators': 'off',
    'no-useless-return': 'off',
    'prefer-spread': 'off',
    'no-prototype-builtins': 'off',
    'ts/ban-types': 'off',
    '@typescript-eslint/ban-types': 'off',
    'ts/no-unsafe-function-type': 'off',
    '@typescript-eslint/no-unsafe-function-type': 'off',
  },
})
